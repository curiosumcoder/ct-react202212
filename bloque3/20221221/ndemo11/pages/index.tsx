import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';


// Redux/Redux Toolkit
import { useDispatch, useSelector } from 'react-redux';
import { searchProducts } from '../state/productSlice';
import IProduct from '../model/product/IProduct';
import cartSlice from '../state/cartSlice';
import searchSlice from '../state/seachSlice';

export default function Home() {
  // Redux/Redux Toolkit
  // Read from state on global store
  const { data, fetchStatus } = useSelector((state: any) => state.products);
  const { items } = useSelector((state: any) => state.cart);
  const { filter } = useSelector((state: any) => state.search);

  // Update state in global store
  const { addToCart, removeFromCart } = cartSlice.actions;
  const { addToFilter } = searchSlice.actions;

  // To execute actions on store
  const dispatch = useDispatch<any>();

  return (
    <>
      <Head>
        <title>App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h3>Products</h3>
      <input
        className="form-control"
        type="search"
        placeholder="Type here ..."
        value={filter}
        onChange={(event) => {
          dispatch(addToFilter(event.target.value));
          dispatch(searchProducts(event.target.value));
        }}
      />
      <br />
      <ul className="list-group list-group-flush">
        {data.map((p: IProduct) => (
          <li className="list-group-item" key={p.id}>
            <p>
              <strong>
                Id: {p.id}, {p.productName}, {p.unitPrice}
              </strong>
              <br />
              {p.category?.categoryName}
              <br />
              {!items.includes(p) && (
                <button
                  className="btn btn-primary btn-sm"
                  onClick={() => dispatch(addToCart(p))}
                >
                  Add to Cart
                </button>
              )}
              <br />
              {items.includes(p) && (
                <button
                  className="btn btn-secondary btn-sm"
                  onClick={() => dispatch(removeFromCart(p))}
                >
                  Remove from Cart
                </button>
              )}
            </p>
          </li>
        ))}
      </ul>
    </>
  );
}
